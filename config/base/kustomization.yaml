commonAnnotations:
  include.release.openshift.io/self-managed-high-availability: "true"
  include.release.openshift.io/single-node-developer: "true"
  capability.openshift.io/name: baremetal

# This kustomization.yaml is not intended to be run by itself,
# since it depends on service name and namespace that are out of this kustomize package.
# It should be run by config/default
resources:
- crds/bases/metal3.io_baremetalhosts.yaml
- crds/bases/metal3.io_hostfirmwaresettings.yaml
- crds/bases/metal3.io_hostfirmwarecomponents.yaml
- crds/bases/metal3.io_firmwareschemas.yaml
- crds/bases/metal3.io_preprovisioningimages.yaml
- crds/bases/metal3.io_bmceventsubscriptions.yaml
- crds/bases/metal3.io_hardwaredata.yaml
- crds/bases/metal3.io_dataimages.yaml
- crds/bases/metal3.io_hostupdatepolicies.yaml
#+kubebuilder:scaffold:crdkustomizeresource

patchesStrategicMerge:
# [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix.
# patches here are for enabling the conversion webhook for each CRD
#- patches/webhook_in_baremetalhosts.yaml
#- patches/webhook_in_hostfirmwaresettings.yaml
#- patches/webhook_in_firmwareschemas.yaml
#- patches/webhook_in_preprovisioningimages.yaml
#- patches/webhook_in_dataimages.yaml
#+kubebuilder:scaffold:crdkustomizewebhookpatch

# [CERTMANAGER] To enable webhook, uncomment all the sections with [CERTMANAGER] prefix.
# patches here are for enabling the CA injection for each CRD
#- patches/cainjection_in_baremetalhosts.yaml
#- patches/cainjection_in_hostfirmwaresettings.yaml
#- patches/cainjection_in_firmwareschemas.yaml
#- patches/cainjection_in_preprovisioningimages.yaml
#- patches/cainjection_in_dataimages.yaml
#+kubebuilder:scaffold:crdkustomizecainjectionpatch

# the following config is for teaching kustomize how to do kustomization for CRDs.
configurations:
- crds/kustomizeconfig.yaml